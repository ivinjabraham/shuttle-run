name: Shuttle Run
description: "Locally runs and checks if a Shuttle project starts up properly."

branding:
  icon: 'activity'
  color: 'orange'

inputs:
  cargo-shuttle-version:
    description: "Use a specific version of Shuttle."
    required: false
    default: ""
  secrets:
    description: "Contents of `Secrets.toml` file."
    required: false
    default: ""
  timeout:
    description: "Amount of time that needs to pass before it stops checking for a successful start."
    required: false
    default: '180'
  port:
    description: "Port on which the server will run."
    required: false
    default: '8000'
  health-path:
    description: "Path to check for server health (e.g., /health)."
    required: false
    default: '/'

runs:
  using: "composite"

  steps:
    - name: Install binstall.
      uses: cargo-bins/cargo-binstall@main
      
    - name: Install cargo-shuttle.
      if: ${{ inputs.cargo-shuttle-version == '' }}
      run: cargo binstall -y --locked cargo-shuttle
      shell: bash

    - name: Install cargo-shuttle with specific version.
      if: ${{ inputs.cargo-shuttle-version != '' }}
      run: cargo binstall -y --locked cargo-shuttle@${{ inputs.cargo-shuttle-version }}
      shell: bash
    
    - name: Create secrets.toml.
      if: ${{ inputs.secrets != '' }}
      run: echo "${{ inputs.secrets }}" > Secrets.toml
      shell: bash

    - name: Run project.
      run: cargo shuttle run --port ${{ inputs.port }}
      shell: bash

    - name: Check for server start.
      run: |
        echo "Waiting for server to start..."
        timeout=${{ inputs.timeout }}
        interval=5
        elapsed=0
        port=${{ inputs.port }}
        health_path=${{ inputs.health-path }}
        while ! curl --silent --fail localhost:${port}${health_path}; do
          sleep $interval
          elapsed=$((elapsed + interval))
          if [ $elapsed -ge $timeout ]; then
            echo "Server failed to start within $timeout seconds."
            exit 1
          fi
        done
        echo "Server is up and running."
      shell: bash
